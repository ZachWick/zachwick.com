digraph "MemberGroupInfoContext::Private::Cachable"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="MemberGroupInfoContext\l::Private::Cachable",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" memberGroups" ,fontname="Helvetica"];
  Node2 [label="SharedPtr\< MemberGroupList\lContext \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d12/class_shared_ptr.html"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node3 [label="MemberGroupListContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d1c/class_member_group_list_context.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="RefCountedContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d96/class_ref_counted_context.html",tooltip="Helper class to support reference counting. "];
  Node5 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="TemplateListIntf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d88/class_template_list_intf.html",tooltip="Abstract read-only interface for a context value of type list. "];
  Node6 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node6 [label="MemberGroupListContext\l::Private",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d09/class_member_group_list_context_1_1_private.html"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="GenericNodeListContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dcb/class_generic_node_list_context.html",tooltip="standard template list implementation "];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MemberGroupListContext \>" ,fontname="Helvetica"];
  Node8 [label="SharedPtr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d12/class_shared_ptr.html",tooltip="Reference counting smart pointer. "];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node9 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" docs" ,fontname="Helvetica"];
  Node10 [label="ScopedPtr\< TemplateVariant \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d9b/class_scoped_ptr.html"];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node11 [label="TemplateVariant",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dba/class_template_variant.html",tooltip="Variant type which can hold one value of a fixed set of types. "];
  Node5 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_list" ,fontname="Helvetica"];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_strukt" ,fontname="Helvetica"];
  Node12 [label="TemplateStructIntf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/de8/class_template_struct_intf.html",tooltip="Abstract interface for a context value of type struct. "];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_delegate" ,fontname="Helvetica"];
  Node13 [label="TemplateVariant::Delegate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d1d/class_template_variant_1_1_delegate.html",tooltip="Helper class to create a delegate that can store a function/method call. "];
  Node11 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_stubPtr" ,fontname="Helvetica"];
  Node14 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TemplateVariant \>" ,fontname="Helvetica"];
  Node14 [label="ScopedPtr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d9b/class_scoped_ptr.html",tooltip="Scoped smart pointer. "];
  Node9 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" memberListContext" ,fontname="Helvetica"];
  Node15 [label="SharedPtr\< MemberListContext \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d12/class_shared_ptr.html"];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node16 [label="MemberListContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dda/class_member_list_context.html"];
  Node4 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" p" ,fontname="Helvetica"];
  Node17 [label="MemberListContext::\lPrivate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/db1/class_member_list_context_1_1_private.html"];
  Node7 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MemberListContext \>" ,fontname="Helvetica"];
}
