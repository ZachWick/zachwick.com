digraph "TemplateNodeIf::GuardedNodes"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="TemplateNodeIf::GuardedNodes",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" trueNodes" ,fontname="Helvetica"];
  Node2 [label="TemplateNodeList",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/daf/class_template_node_list.html",tooltip="Class representing a list of AST nodes in a template. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="QList\< TemplateNode \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" guardAst" ,fontname="Helvetica"];
  Node4 [label="ExprAst",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dfa/class_expr_ast.html",tooltip="Base class for all nodes in the abstract syntax tree of an expression. "];
}
